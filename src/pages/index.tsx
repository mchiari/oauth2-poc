/* eslint-disable @typescript-eslint/restrict-template-expressions */
/* eslint-disable @typescript-eslint/no-unsafe-assignment */
import { type NextPage } from "next";
import Head from "next/head";
// import Link from "next/link";
import qs, { type ParsedQuery } from 'query-string'
import { useEffect } from "react";
import axios from "axios"


const Home: NextPage = () => {
  // console.log(process.env.NEXT_PUBLIC_GITHUB_CLIENT_ID)
  // console.log(process.env.NEXT_PUBLIC_BACKEND_URL)



  //----------------------------------------- GITHUB AUTH -----------------------------------------
  useEffect(() => {

    const sendCodeToBackend = async () => {
      const { code } = qs.parseUrl(window.location.href).query
      if (code && process.env.NEXT_PUBLIC_BACKEND_URL) {
        try {
          const response = await axios.post(`${process.env.NEXT_PUBLIC_BACKEND_URL}/api/github`, { code })
          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
          const user = response.data;
          console.log('response: ', user)
        } catch (error) {
          console.log(error)
        }
      }
    }
    sendCodeToBackend().catch((err) => console.log(err))
  }, [])


  const redirectToGitHub = () => {
    const GITHUB_URL = 'https://github.com/login/oauth/authorize'
    const params = {
      response_type: 'code',
      scope: 'user',
      client_id: process.env.NEXT_PUBLIC_GITHUB_CLIENT_ID,
      redirect_uri: process.env.NEXT_PUBLIC_GITHUB_REDIRECT_URI,
      // state: 'test-t5'
    }
    const queryStrings = qs.stringify(params);
    const authURL = `${GITHUB_URL}?${queryStrings}`
    window.location.href = authURL
  }
  //----------------------------------------- GITHUB AUTH -----------------------------------------







  //GOOGLE AUTH



  const redirectToGoogle = () => {
    const GOOGLE_URL = 'https://accounts.google.com/o/oauth2/v2/auth'
    const params = {
      response_type: 'token',
      scope: 'https://mail.google.com/',
      client_id: process.env.NEXT_PUBLIC_GOOGLE_CLIENT_ID,
      redirect_uri: process.env.NEXT_PUBLIC_GOOGLE_REDIRECT_URI,
      include_granted_scopes: 'true',
      state: 'pass-through value'
    }
    const queryStrings = qs.stringify(params);
    const authURL = `${GOOGLE_URL}?${queryStrings}`
    console.log(authURL)
    window.location.href = authURL
  }


  useEffect(() => {

    // const { state, access_token, token_type, expires_in, scope } = qs.parseUrl(window.location.href,  {parseFragmentIdentifier: true}).fragmentIdentifier
    const qstring = qs.parseUrl(window.location.href, { parseFragmentIdentifier: true }).fragmentIdentifier
    
    const params = qs.parse(String(qstring))
    qstring && qstring?.length > 1 && console.log('params', params)


    getGoogleInfo(params).catch((err) => console.log(err))

  // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [])

  type GoogleAuthType  = {
    access_token: string
    expires_in: string,
    scope: string,
    state: string,
    token_type: string
  } | ParsedQuery<string>

  const getGoogleInfo = async (params: GoogleAuthType) => {
    const { access_token } = params

    if (access_token) {
      try {
        const { data } = await axios.get('https://gmail.googleapis.com/gmail/v1/users/me/profile', {
          headers: { 'Authorization': `Bearer ${access_token}` }
        })
        console.log('response.data: ', data)
      } catch (error) {
        console.log(error)
      }
    }
  }


  http://localhost:3000/#state=pass-through%20value&access_token=ya29.a0Ael9sCPdP_ys1LkdMpGd_03LaxsYH2TM8S_On8eh7gGyn0IfizQL9Lni4Z6jaP17u7IAkR0417nYWX7tNdHsqT4aEXo2Ur34YTJMHduA0pyvH4HRBO1BdT_A_I7gfI0IKhuuBlzsvg0saOe0Io9Vu-0yeHeEaCgYKAVUSARMSFQF4udJhdjdcdMsP2vAebfwTjRZufw0163&token_type=Bearer&expires_in=3599&scope=https://mail.google.com/





  return (
    <>
      <Head>
        <title>OAUTH 2.0 Proof Of Concept</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-3xl font-extrabold tracking-tight text-white sm:text-[3rem]">
            This is a <span className="text-[hsl(280,100%,70%)]">OAuth 2.0</span> POC
          </h1>
          <div className="flex flex-col items-center justify-center gap-4 text-white">

            <button onClick={redirectToGitHub}> Github Login </button>
            <button onClick={redirectToGoogle}> Google Login </button>
            <button> Meta Login </button>

          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
